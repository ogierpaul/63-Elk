version: '3.8'

services:
  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch
      args:
        ELK_VERSION: 7.10.1
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    container_name: logstash
    build:
      context: logstash
      args:
        ELK_VERSION: 7.10.1
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/config/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: ./logstash/drivers
        target: /drivers
        read_only: true

      - ./shared_volume:/shared_volume
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx20968m -Xms2096m"
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana
    build:
      context: kibana
      args:
        ELK_VERSION: 7.10.1
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  postgres:
    # Use the official image from PostgreSQL & PostGIS
    container_name: postgres
    image: postgis/postgis:11-2.5
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5439:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./shared_volume:/shared_volume

volumes:
  elasticsearch:
  postgres:
